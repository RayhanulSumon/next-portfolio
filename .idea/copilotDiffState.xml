<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/page.tsx" />
              <option name="originalContent" value="import { Metadata } from 'next';&#10;import { Analytics } from '@vercel/analytics/react';&#10;import HeroSection from './page/HeroSection';&#10;import RightNavBar from './page/RightNavBar';&#10;import SkillsSection from './page/SkillsSection';&#10;import AchievementsSection from './page/AchievementsSection';&#10;&#10;&#10;export const metadata: Metadata = {&#10;    title: 'Rayhanul Sumon - Full Stack Developer',&#10;    description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;    keywords: ['Rayhanul Sumon', 'Full Stack Developer', 'React', 'Next.js', 'Laravel', 'Portfolio', 'Web Development'],&#10;    authors: [{ name: 'Rayhanul Sumon', url: 'https://rayhanulsumon.com' }],&#10;    creator: 'Rayhanul Sumon',&#10;    publisher: 'Rayhanul Sumon',&#10;    openGraph: {&#10;        title: 'Rayhanul Sumon - Full Stack Developer',&#10;        description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;        url: 'https://rayhanulsumon.com',&#10;        siteName: 'Rayhanul Sumon Portfolio',&#10;        images: [&#10;            {&#10;                url: 'https://rayhanulsumon.com/og-image.jpg',&#10;                width: 1200,&#10;                height: 630,&#10;                alt: 'Rayhanul Sumon Portfolio'&#10;            }&#10;        ],&#10;        locale: 'en_US',&#10;        type: 'website'&#10;    },&#10;    twitter: {&#10;        card: 'summary_large_image',&#10;        title: 'Rayhanul Sumon - Full Stack Developer',&#10;        description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;        images: ['https://rayhanulsumon.com/twitter-image.jpg'],&#10;        creator: '@RayhanulSumon'&#10;    },&#10;    icons: {&#10;        icon: '/favicon.ico',&#10;        shortcut: '/favicon-16x16.png',&#10;        apple: '/apple-touch-icon.png',&#10;        other: [&#10;            { rel: 'android-chrome', url: '/android-chrome-192x192.png' },&#10;            { rel: 'android-chrome', url: '/android-chrome-512x512.png' }&#10;        ]&#10;    },&#10;    manifest: '/site.webmanifest'&#10;};&#10;&#10;export default function Home() {&#10;  return (&#10;    &lt;&gt;&#10;      &lt;RightNavBar /&gt;&#10;      &lt;main className=&quot;pt-0&quot;&gt;&#10;        &lt;HeroSection /&gt;&#10;        &lt;SkillsSection /&gt;&#10;        &lt;AchievementsSection /&gt;&#10;      &lt;/main&gt;&#10;&#10;      &lt;Analytics /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="import { Metadata } from 'next';&#10;import { Analytics } from '@vercel/analytics/react';&#10;import HeroSection from './page/HeroSection';&#10;import RightNavBar from './page/RightNavBar';&#10;import SkillsSection from './page/SkillsSection';&#10;import AchievementsSection from './page/AchievementsSection';&#10;&#10;&#10;export const metadata: Metadata = {&#10;    title: 'Rayhanul Sumon - Full Stack Developer',&#10;    description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;    keywords: ['Rayhanul Sumon', 'Full Stack Developer', 'React', 'Next.js', 'Laravel', 'Portfolio', 'Web Development'],&#10;    authors: [{ name: 'Rayhanul Sumon', url: 'https://rayhanulsumon.com' }],&#10;    creator: 'Rayhanul Sumon',&#10;    publisher: 'Rayhanul Sumon',&#10;    openGraph: {&#10;        title: 'Rayhanul Sumon - Full Stack Developer',&#10;        description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;        url: 'https://rayhanulsumon.com',&#10;        siteName: 'Rayhanul Sumon Portfolio',&#10;        images: [&#10;            {&#10;                url: 'https://rayhanulsumon.com/og-image.jpg',&#10;                width: 1200,&#10;                height: 630,&#10;                alt: 'Rayhanul Sumon Portfolio'&#10;            }&#10;        ],&#10;        locale: 'en_US',&#10;        type: 'website'&#10;    },&#10;    twitter: {&#10;        card: 'summary_large_image',&#10;        title: 'Rayhanul Sumon - Full Stack Developer',&#10;        description: 'Welcome to my personal portfolio website. I am a Full Stack Developer specializing in React, Next.js, and Laravel. Explore my skills, achievements, and projects.',&#10;        images: ['https://rayhanulsumon.com/twitter-image.jpg'],&#10;        creator: '@RayhanulSumon'&#10;    },&#10;    icons: {&#10;        icon: '/favicon.ico',&#10;        shortcut: '/favicon-16x16.png',&#10;        apple: '/apple-touch-icon.png',&#10;        other: [&#10;            { rel: 'android-chrome', url: '/android-chrome-192x192.png' },&#10;            { rel: 'android-chrome', url: '/android-chrome-512x512.png' }&#10;        ]&#10;    },&#10;    manifest: '/site.webmanifest'&#10;};&#10;&#10;export default function Home() {&#10;  return (&#10;    &lt;&gt;&#10;      &lt;RightNavBar /&gt;&#10;      &lt;main className=&quot;pt-0&quot;&gt;&#10;        &lt;HeroSection /&gt;&#10;        &lt;SkillsSection /&gt;&#10;        &lt;AchievementsSection /&gt;&#10;      &lt;/main&gt;&#10;      &lt;Analytics /&gt;&#10;    &lt;/&gt;&#10;  );&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/components/DesktopNavBar.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/components/DesktopNavBar.tsx" />
              <option name="originalContent" value="import Link from 'next/link';&#10;import SwitchDark from './switch/SwitchDark';&#10;import React from 'react';&#10;&#10;interface DesktopNavBarProps {&#10;  isScrolled: boolean;&#10;  pathname: string;&#10;  navigationItems: { href: string; icon: string; label: string; color: string }[];&#10;}&#10;&#10;const DesktopNavBarComponent: React.FC&lt;DesktopNavBarProps&gt; = ({ isScrolled, pathname, navigationItems }) =&gt; (&#10;  &lt;div className=&quot;hidden md:flex items-center space-x-6&quot;&gt;&#10;    {/* Navigation links */}&#10;    &lt;div className={`flex items-center space-x-1 sm:space-x-2 bg-gradient-to-r from-gray-50/80 to-gray-100/80 dark:from-gray-800/80 dark:to-gray-700/80 rounded-2xl backdrop-blur-sm shadow-inner border border-gray-200/50 dark:border-gray-600/50 transition-all duration-500 ${&#10;      isScrolled ? 'p-1 sm:p-1.5' : 'p-1.5 sm:p-2'&#10;    }`}&gt;&#10;      {navigationItems.map((item, index) =&gt; {&#10;        const isActive = pathname === item.href;&#10;        return (&#10;          &lt;Link&#10;            key={item.href}&#10;            href={item.href}&#10;            className={`relative rounded-xl transition-all duration-500 font-medium text-xs sm:text-sm flex items-center gap-1 sm:gap-2 group overflow-hidden ${&#10;              isScrolled &#10;                ? 'px-2 py-1 sm:px-3 sm:py-2' &#10;                : 'px-2.5 py-1.5 sm:px-4 sm:py-2.5'&#10;            } ${&#10;              isActive&#10;                ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-lg scale-105'&#10;                : 'text-gray-600 dark:text-gray-400 hover:bg-white/80 dark:hover:bg-gray-700/80 hover:text-gray-900 dark:hover:text-white hover:scale-105'&#10;            }`}&#10;            style={{&#10;              animationDelay: `${index * 100}ms`&#10;            }}&#10;          &gt;&#10;            {/* Magnetic hover effect background */}&#10;            &lt;div className={`absolute inset-0 bg-gradient-to-r ${item.color} opacity-0 group-hover:opacity-10 transition-opacity duration-300 rounded-xl`}&gt;&lt;/div&gt;&#10;            &lt;span className={`transition-all duration-300 relative z-10 ${&#10;              isScrolled ? 'text-base' : 'text-lg'&#10;            } ${&#10;              isActive ? 'scale-110 animate-pulse' : 'group-hover:scale-110 group-hover:rotate-12'&#10;            }`}&gt;&#10;              {item.icon}&#10;            &lt;/span&gt;&#10;            &lt;span className={`relative z-10 transition-all duration-300 ${&#10;              isScrolled &amp;&amp; !isActive ? 'opacity-80' : 'opacity-100'&#10;            }`}&gt;&#10;              {item.label}&#10;              {isActive &amp;&amp; (&#10;                &lt;div className={`absolute -bottom-1 left-0 right-0 h-0.5 bg-gradient-to-r ${item.color} rounded-full animate-pulse`}&gt;&lt;/div&gt;&#10;              )}&#10;            &lt;/span&gt;&#10;            {/* Ripple effect on hover */}&#10;            &lt;div className=&quot;absolute inset-0 rounded-xl overflow-hidden&quot;&gt;&#10;              &lt;div className={`absolute inset-0 bg-gradient-to-r ${item.color} opacity-0 group-hover:opacity-20 transition-all duration-500 transform scale-0 group-hover:scale-100 rounded-xl`}&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {/* Scroll indicator for active item */}&#10;            {isActive &amp;&amp; isScrolled &amp;&amp; (&#10;              &lt;div className=&quot;absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-blue-500 rounded-full animate-bounce&quot;&gt;&lt;/div&gt;&#10;            )}&#10;          &lt;/Link&gt;&#10;        );&#10;      })}&#10;    &lt;/div&gt;&#10;    {/* Gap between menu and toggle */}&#10;    &lt;div className=&quot;ml-2 sm:ml-4&quot;&gt;&#10;      &lt;SwitchDark /&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;);&#10;&#10;const DesktopNavBar = React.memo(DesktopNavBarComponent);&#10;export default DesktopNavBar;" />
              <option name="updatedContent" value="import Link from 'next/link';&#10;import SwitchDark from './switch/SwitchDark';&#10;import React from 'react';&#10;&#10;interface DesktopNavBarProps {&#10;  isScrolled: boolean;&#10;  pathname: string;&#10;  navigationItems: { href: string; icon: string; label: string; color: string }[];&#10;}&#10;&#10;const DesktopNavBarComponent: React.FC&lt;DesktopNavBarProps&gt; = ({ isScrolled, pathname, navigationItems }) =&gt; (&#10;  &lt;div className=&quot;hidden md:flex items-center space-x-6&quot;&gt;&#10;    {/* Navigation links */}&#10;    &lt;div className={`flex items-center space-x-1 sm:space-x-2 bg-gradient-to-r from-gray-50/80 to-gray-100/80 dark:from-gray-800/80 dark:to-gray-700/80 rounded-2xl backdrop-blur-sm shadow-inner border border-gray-200/50 dark:border-gray-600/50 transition-all duration-500 ${&#10;      isScrolled ? 'p-1 sm:p-1.5' : 'p-1.5 sm:p-2'&#10;    }`}&gt;&#10;      {navigationItems.map((item, index) =&gt; {&#10;        const isActive = pathname === item.href;&#10;        return (&#10;          &lt;Link&#10;            key={item.href}&#10;            href={item.href}&#10;            className={`relative rounded-xl transition-all duration-500 font-medium text-xs sm:text-sm flex items-center gap-1 sm:gap-2 group overflow-hidden ${&#10;              isScrolled &#10;                ? 'px-2 py-1 sm:px-3 sm:py-2' &#10;                : 'px-2.5 py-1.5 sm:px-4 sm:py-2.5'&#10;            } ${&#10;              isActive&#10;                ? 'bg-white dark:bg-gray-700 text-gray-900 dark:text-white shadow-lg scale-105'&#10;                : 'text-gray-600 dark:text-gray-400 hover:bg-white/80 dark:hover:bg-gray-700/80 hover:text-gray-900 dark:hover:text-white hover:scale-105'&#10;            }`}&#10;            style={{&#10;              animationDelay: `${index * 100}ms`&#10;            }}&#10;          &gt;&#10;            {/* Magnetic hover effect background */}&#10;            &lt;div className={`absolute inset-0 bg-gradient-to-r ${item.color} opacity-0 group-hover:opacity-10 transition-opacity duration-300 rounded-xl`}&gt;&lt;/div&gt;&#10;            &lt;span className={`transition-all duration-300 relative z-10 ${&#10;              isScrolled ? 'text-base' : 'text-lg'&#10;            } ${&#10;              isActive ? 'scale-110 animate-pulse' : 'group-hover:scale-110 group-hover:rotate-12'&#10;            }`}&gt;&#10;              {item.icon}&#10;            &lt;/span&gt;&#10;            &lt;span className={`relative z-10 transition-all duration-300 ${&#10;              isScrolled &amp;&amp; !isActive ? 'opacity-80' : 'opacity-100'&#10;            }`}&gt;&#10;              {item.label}&#10;              {isActive &amp;&amp; (&#10;                &lt;div className={`absolute -bottom-1 left-0 right-0 h-0.5 bg-gradient-to-r ${item.color} rounded-full animate-pulse`}&gt;&lt;/div&gt;&#10;              )}&#10;            &lt;/span&gt;&#10;            {/* Ripple effect on hover */}&#10;            &lt;div className=&quot;absolute inset-0 rounded-xl overflow-hidden&quot;&gt;&#10;              &lt;div className={`absolute inset-0 bg-gradient-to-r ${item.color} opacity-0 group-hover:opacity-20 transition-all duration-500 transform scale-0 group-hover:scale-100 rounded-xl`}&gt;&lt;/div&gt;&#10;            &lt;/div&gt;&#10;            {/* Scroll indicator for active item */}&#10;            {isActive &amp;&amp; isScrolled &amp;&amp; (&#10;              &lt;div className=&quot;absolute -top-1 left-1/2 transform -translate-x-1/2 w-1 h-1 bg-blue-500 rounded-full animate-bounce&quot;&gt;&lt;/div&gt;&#10;            )}&#10;          &lt;/Link&gt;&#10;        );&#10;      })}&#10;    &lt;/div&gt;&#10;    {/* Gap between menu and toggle */}&#10;    &lt;div className=&quot;ml-2 sm:ml-4&quot;&gt;&#10;      &lt;SwitchDark /&gt;&#10;    &lt;/div&gt;&#10;  &lt;/div&gt;&#10;);&#10;&#10;const DesktopNavBar = React.memo(DesktopNavBarComponent);&#10;export default DesktopNavBar;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>